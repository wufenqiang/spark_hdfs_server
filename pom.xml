<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.weather.bigdata.it.cluster</groupId>
    <artifactId>spark_hdfs_server</artifactId>
    <!--<version>0.0.1-felix</version>-->
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>


    <name>${project.artifactId}</name>
    <url>http://maven.apache.org</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.16.RELEASE</version>
        <!--<version>2.0.0.RELEASE</version>-->
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <scala.version>2.11.8</scala.version>
        <java.version>1.8</java.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <commons-io.version>2.6</commons-io.version>

        <sparksubmit.version>0.0.1-SNAPSHOT</sparksubmit.version>
        <fastjson.version>1.2.51</fastjson.version>
        <urlstable>http://220.243.129.233:9090/archiva/repository</urlstable>
        <!-- The main class to start by executing java -jar -->
        <start-class>com.weather.bigdata.it.cluster.Application</start-class>
    </properties>

    <distributionManagement>
        <repository>
            <id>internal</id>
            <name>Internal Release Repository</name>
            <url>${urlstable}/internal/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Internal Snapshot Repository</name>
            <url>${urlstable}/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>scala-tools.org</id>
            <name>Scala-Tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </repository>
        <repository>
            <id>snapshots</id>
            <url>${urlstable}/snapshots/</url>
        </repository>
        <repository>
            <id>internal</id>
            <url>${urlstable}/internal/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-Tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.weather.bigdata.it.spark</groupId>
            <artifactId>sparksubmit</artifactId>
            <version>${sparksubmit.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--与spark日志冲突-->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-logging</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.3.1-1</version>
        </dependency> -->

        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!--时间操作包 -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>


        <!--解决spring-boot在spark中框架加载失败-->
        <!--<dependency>-->
        <!--<groupId>javax.validation</groupId>-->
        <!--<artifactId>validation-api</artifactId>-->
        <!--<version>1.1.0.Final</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.hibernate</groupId>-->
        <!--<artifactId>hibernate-validator</artifactId>-->
        <!--<version>5.2.4.Final</version>-->
        <!--</dependency>-->

    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <!--Caused by: java.lang.IllegalArgumentException: -->
        <sourceDirectory>src/main/java</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--将依赖注入jar包内-->
            <!--<plugin>-->
            <!--<artifactId>maven-assembly-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<descriptorRefs>-->
            <!--<descriptorRef>jar-with-dependencies</descriptorRef>-->
            <!--</descriptorRefs>-->
            <!--<archive>-->
            <!--<manifest>-->
            <!--&lt;!&ndash;<mainClass>${start-class}</mainClass>&ndash;&gt;-->
            <!--</manifest>-->
            <!--</archive>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>make-assembly</id>-->
            <!--<phase>package</phase>-->
            <!--<goals>-->
            <!--<goal>single</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->


        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <pom.hdfs_url_prefix></pom.hdfs_url_prefix>
                <pom.upload_dir>${pom.hdfs_url_prefix}/F:/tmp/grib_spark_platform/</pom.upload_dir>
                <pom.spark_hdfs_server_rootPath.upload_dir>${pom.hdfs_url_prefix}/F:/tmp/</pom.spark_hdfs_server_rootPath.upload_dir>
                <pom.accountRegistration.config>${pom.hdfs_url_prefix}/F:/WorkSpace/IDEAWorkSpace/spark_hdfs_server/src/test/resources_out/accountRegistration.properties</pom.accountRegistration.config>
                <pom.parameter.pathRoot>${pom.hdfs_url_prefix}/D:/Data/forecast/Input/parameter/</pom.parameter.pathRoot>
                <pom.regionKey.online>region0</pom.regionKey.online>
                <pom.regionKey.online_sec>region1</pom.regionKey.online_sec>
                <pom.regionKey.patch>region2</pom.regionKey.patch>
                <pom.regionKey.mt>region3</pom.regionKey.mt>
                <pom.regionKey.it>region4</pom.regionKey.it>


                <pom.sparksubmit.open>false</pom.sparksubmit.open>
                <pom.sparksubmit.regionKey>region0,region1</pom.sparksubmit.regionKey>
                <pom.sparksubmit.splitPath>${pom.hdfs_url_prefix}/D:/Data/forecast/Input/</pom.sparksubmit.splitPath>
            </properties>
        </profile>

        <!--<profile>-->
        <!--<id>dev</id>-->
        <!--<properties>-->
        <!--<pom.hdfs_url_prefix>hdfs://dataflow-node-1:9000</pom.hdfs_url_prefix>-->
        <!--<pom.upload_dir>/ser/program/platform/grib_spark_platform/</pom.upload_dir>-->
        <!--<pom.spark_hdfs_server_rootPath.upload_dir></pom.spark_hdfs_server_rootPath.upload_dir>-->

        <!--<pom.accountRegistration.config></pom.accountRegistration.config>-->
        <!--<pom.regionKey.protected>region0</pom.regionKey.protected>-->

        <!--<pom.sparksubmit.open>false</pom.sparksubmit.open>-->
        <!--<pom.sparksubmit.regionKey>region0</pom.sparksubmit.regionKey>-->
        <!--<pom.sparksubmit.splitPath>/ser/hdfs/forecast/parameter/split/</pom.sparksubmit.splitPath>-->
        <!--</properties>-->
        <!--</profile>-->

        <profile>
            <id>prod</id>
            <properties>
                <pom.hdfs_url_prefix>hdfs://dataflow-node-1:9000</pom.hdfs_url_prefix>
                <!--<pom.hdfs_url_prefix>hdfs:/</pom.hdfs_url_prefix>-->
                <pom.upload_dir>${pom.hdfs_url_prefix}/ser/program/hdfs/grib_spark_platform/</pom.upload_dir>
                <pom.spark_hdfs_server_rootPath.upload_dir>${pom.hdfs_url_prefix}/ser/program/hdfs/spark_hdfs_server/</pom.spark_hdfs_server_rootPath.upload_dir>
                <pom.parameter.pathRoot>${pom.hdfs_url_prefix}/ser/program/hdfs/grib_spark_platform/parameter/</pom.parameter.pathRoot>
                <pom.accountRegistration.config>${pom.hdfs_url_prefix}/ser/program/hdfs/spark_hdfs_server/accountRegistration.properties</pom.accountRegistration.config>
                <pom.regionKey.online>region0</pom.regionKey.online>
                <pom.regionKey.online_sec>region1</pom.regionKey.online_sec>
                <pom.regionKey.patch>region2</pom.regionKey.patch>
                <pom.regionKey.mt>region3</pom.regionKey.mt>
                <pom.regionKey.it>region4</pom.regionKey.it>

                <pom.sparksubmit.open>false</pom.sparksubmit.open>
                <pom.sparksubmit.regionKey>region0,region1</pom.sparksubmit.regionKey>
                <pom.sparksubmit.splitPath>${pom.hdfs_url_prefix}/ser/hdfs/forecast/parameter/split/</pom.sparksubmit.splitPath>

            </properties>
        </profile>

    </profiles>

</project>